--- ../src-base/minecraft/net/minecraft/nbt/NBTTagDouble.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagDouble.java
@@ -1,94 +1,83 @@
 package net.minecraft.nbt;
 
+import net.minecraft.util.MathHelper;
+
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
-import net.minecraft.util.MathHelper;
 
-public class NBTTagDouble extends NBTBase.NBTPrimitive
-{
+public class NBTTagDouble extends NBTBase.NBTPrimitive {
     private double data;
     private static final String __OBFID = "CL_00001218";
 
-    NBTTagDouble() {}
+    NBTTagDouble() {
+    }
 
-    public NBTTagDouble(double p_i45130_1_)
-    {
+    public NBTTagDouble(double p_i45130_1_) {
         this.data = p_i45130_1_;
     }
 
-    void write(DataOutput p_74734_1_) throws IOException
-    {
+    void write(DataOutput p_74734_1_) throws IOException {
         p_74734_1_.writeDouble(this.data);
     }
 
-    void func_152446_a(DataInput p_152446_1_, int p_152446_2_, NBTSizeTracker p_152446_3_) throws IOException
-    {
+    void func_152446_a(DataInput p_152446_1_, int p_152446_2_, NBTSizeTracker p_152446_3_) throws IOException {
         p_152446_3_.func_152450_a(64L);
         this.data = p_152446_1_.readDouble();
     }
 
-    public byte getId()
-    {
-        return (byte)6;
+    public byte getId() {
+        return (byte) 6;
     }
 
-    public String toString()
-    {
+    public String toString() {
         return "" + this.data + "d";
     }
 
-    public NBTBase copy()
-    {
+    public NBTBase copy() {
         return new NBTTagDouble(this.data);
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        if (super.equals(p_equals_1_))
-        {
-            NBTTagDouble nbttagdouble = (NBTTagDouble)p_equals_1_;
+    public boolean equals(Object p_equals_1_) {
+        if (super.equals(p_equals_1_)) {
+            NBTTagDouble nbttagdouble = (NBTTagDouble) p_equals_1_;
             return this.data == nbttagdouble.data;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         long i = Double.doubleToLongBits(this.data);
-        return super.hashCode() ^ (int)(i ^ i >>> 32);
+        return super.hashCode() ^ (int) (i ^ i >>> 32);
     }
 
-    public long func_150291_c()
-    {
-        return (long)Math.floor(this.data);
+    public long func_150291_c() {
+        return (long) Math.floor(this.data);
     }
 
-    public int func_150287_d()
-    {
+    public int func_150287_d() {
         return MathHelper.floor_double(this.data);
     }
 
-    public short func_150289_e()
-    {
-        return (short)(MathHelper.floor_double(this.data) & 65535);
+    public short func_150289_e() {
+        return (short) (MathHelper.floor_double(this.data) & 65535);
     }
 
-    public byte func_150290_f()
-    {
-        return (byte)(MathHelper.floor_double(this.data) & 255);
+    public byte func_150290_f() {
+        return (byte) (MathHelper.floor_double(this.data) & 255);
     }
 
-    public double func_150286_g()
-    {
+    public double func_150286_g() {
         return this.data;
     }
 
-    public float func_150288_h()
-    {
-        return (float)this.data;
+    public float func_150288_h() {
+        return (float) this.data;
     }
+
+    @Override
+    public String crucible_toString() {
+        return this.toString();
+    }
 }
